! Ambient Weather 
! 
! Export a month of data.  
!   - from the interface choose Charts and Graphs, and under that choose charts -- the 3 lines
!   - Select the date range, the first through end of the month, then click the symbol just below 
!      the dates with the upward-pointing arrow.  This is "Download". Saveas a comma-separated file.

! Save to Unix folder ~ansley/ambient/data/
! Look at the file permissions, will need to change them to rw
! 
! They come out in reverse time order most-recent-first.
! The times are listed as 2021-06-30T23:55:00-07:00 - so GMT with an offset of 7 hours 
! for Daylight Time, or 8 for Standard Time
!
! This script opens the file, reads and reverses the order, writing a new csv file.  The 
! script coaches some editing of the file for minor reformatting. Then define the time 
! axis and write temperature and rainfall data to a netCDF file.

! Input arguments: 
!   1    file name, e.g. ambient-weather-20210601-20210630, without the .csv, in the data/ directory
!   2    Month name for creating the output file name, e.g. June.
!   3    Year  for creating the output file name, e.g. 2021
!   4    1 to read using the older format, without "simple date", 0 or not included otherwise

! Example: 
!    go ambient_convert.jnl ambient-weather-20201201-20201231 December 2020 1

cancel data/all
cancel variable/all
cancel symbol/all

set window/aspect=1/siz=2
cancel mode logo

define symbol infile = ($1).csv
define symbol month = ($2)
define symbol year = ($3)
define symbol old = 0
if ($4"0") THEN 
   define symbol old = ($4"0|1|*>0")
endif

IF ($month"0|Nov>1|*>0") THEN 
  message "When changing from Daylight to Standard time, the data repeats the hour from 1AM to 2AM.  Edit out this hour"
ENDIF


define symbol outfile = ($1).nc

define symbol monthyear ($month)($year)

! Change the value of 'rewrite' to 0 if the file has already been rewritten and we're starting after
! the edit of the dates_incr file.

let rewrite = 1
IF `rewrite EQ 1` THEN

! header line is:
! Nov 2021, they added "Simple Date"

! Date,Simple Date,Outdoor Temperature (°F),Feels Like (°F),Dew Point (°F),Wind Speed (mph),Wind Gust (mph),Max Daily Gust (mph),Wind Direction (°),Hourly Rain (in/hr),Event Rain (in),Daily Rain (in),Weekly Rain (in),Monthly Rain (in),Total Rain (in),Relative Pressure (inHg),Outdoor Humidity (%),Ultra-Violet Radiation Index,Solar Radiation (W/m^2),Indoor Temperature (°F),Indoor Humidity (%),Absolute Pressure (inHg),Outdoor Battery,Indoor Feels Like (°F),Indoor Dew Point (°F)

! Read the file - variables that are going to be saved are named with short names such as ot_in for Outdoor Temperature.  The variable
! will be reshaped to the time axis, and renamed at that time.

IF ($old) then
 file/skip=1/type="text,num,num,num,num,num,num,num,num,num,num,num,num,num,num,num,num,num,num,num,num,num "\
 /var="date,ot_in,feel_in,dew_in,WindSpeed,WindGust,MaxDailyGust,WindDirection,hr_in,er_in,dr_in,WeeklyRain,MonthlyRain,\
 TotalRain,RelativePressure,OutdoorHumidity,UVRadiationIndex,SolarRadiation,it_in,IndoorHumidity,AbsolutePressure,\
 OutdoorBattery,IndoorFeels Like,IndoorDewPoint"/form=delim data/($infile)

else

 file/skip=1/type="text,text,num,num,num,num,num,num,num,num,num,num,num,num,num,num,num,num,num,num,num,num,num "\
 /var="date,simpledate,ot_in,feel_in,dew_in,WindSpeed,WindGust,MaxDailyGust,WindDirection,hr_in,er_in,dr_in,WeeklyRain,MonthlyRain,\
 TotalRain,RelativePressure,OutdoorHumidity,UVRadiationIndex,SolarRadiation,it_in,IndoorHumidity,AbsolutePressure,\
 OutdoorBattery,IndoorFeels Like,IndoorDewPoint"/form=delim data/($infile)

endif

! Write date/time, variables we are keeping, in increasing time order to a new csv file

say/clobber/outfile="data/($monthyear)_dates_incr.dat" "($month) ($year) Dates Increasing: Date,Outdoor Temperature,Feels Like,Dew Point,Wind Speed,Wind Gust,Max Daily Gust, Wind Direction, Indoor Temperature, Hourly Rain, Daily Rain, RelativePressure, OutdoorHumidity"


let nr = `date,return=isize`

cancel mode verify
say
say file ($1).csv
say Listing `nr` timesteps in increasing time order...
say

let ii = i[gx=date]
let irev = xreverse(ii)
let dater_in = sample_fast_i(date, irev)
let otr = xreverse(missing(ot_in,999))
let feelr = xreverse(missing(feel_in,999))
let dewr = xreverse(missing(dew_in,999))
let wspdr = xreverse(missing(WindSpeed,999))
let wgustr = xreverse(missing(WindGust,999))
let wgustmaxr = xreverse(missing(MaxDailyGust,999))
let wdirr = xreverse(missing(WindDirection,999))
let itr = xreverse(missing(it_in,999))
let hrr = xreverse(missing(hr_in,999))
let drr = xreverse(missing(dr_in,999))
let rpr = xreverse(missing(RelativePressure,999))
let hum = xreverse(missing(OutdoorHumidity,999))

let date_o = substring(dater_in, 1, 10)
let time_o = substring(dater_in, 12, 8)

list/append/file="data/($monthyear)_dates_incr.dat"/form=(a10,a10,f8.2,f8.2,f8.2,f8.2,f8.2,f8.2,f8.2,f8.2,f8.2,f8.2,f8.2,f8.2)/norow/nohead date_o,time_o,otr,feelr,dewr,wspdr,wgustr,wgustmaxr,wdirr,itr,hrr,drr,rpr,hum

IF `substring(date_o[i=1],6,2) eq "11"` THEN
 say
   say Edit the resulting file  data/($monthyear)_dates_incr.dat. Look for duplicate
   say times due to the end of daylight savings time. Edit those out.
   message hit return when done.
 say
ENDIF

ENDIF  ! rewrite

! Read this file and define the time axis.


cancel data/all
file/delim=" "/skip=1/type="date,time,num,num,num,num,num,num,num,num,num,num,num,num"/var=\
"date,time,ot_in,fee_in,dew_in,wspd_in,wgust_in,wgustmax_in,wdir_in,it_in,hr_in,dr_in,\
pres_in,hum_in"/form=delim data/($monthyear)_dates_incr.dat

! Define the time axis from the dates 
! Save as a netCDF file.

define axis/t/t0=1-jan-1900/units=days taxis = date + time/24

set var/bad=999 ot_in
set var/bad=999 fee_in
set var/bad=999 dew_in
set var/bad=999 wspd_in
set var/bad=999 wgust_in
set var/bad=999 wgustmax_in
set var/bad=999 wdir_in
set var/bad=999 it_in
set var/bad=999 hr_in
set var/bad=999 dr_in
set var/bad=999 pres_in
set var/bad=999 hum_in

let tt = t[gt=taxis]
let/units="Deg F"/title="Outdoor Temperature" Outdoor_Temperature = reshape(ot_in, tt)
let/units="Deg F"/title="Feels Like" Feels_Like = reshape(fee_in, tt)
let/units="Deg F"/title="Dew Point" Dew_Point = reshape(dew_in, tt)
let/units="Deg F"/title="Indoor Temperature" Indoor_Temperature = reshape(it_in, tt)

let/units="Miles/Hr"/title="Wind Speed" WindSpeed = reshape(wspd_in, tt)
let/units="Miles/Hr"/title="Wind Gust" WindGust = reshape(wgust_in, tt)
let/units="Miles/Hr"/title="Max Wind Gust" WindGustMax = reshape(wgustmax_in, tt)
let/units="Degrees"/title="Wind Direction" WindDir = reshape(wdir_in, tt)

let/units=Inch/title="Hourly Rain" Hourly_Rain = reshape(hr_in, tt)
let/units=Inch/title="Daily Rain" Daily_Rain = reshape(dr_in, tt)
let/units=Hg/title="Relative Pressure" Relative_Pressure = reshape(pres_in, tt)
let/units=Percent/title="Outdoor Humidity" Outdoor_Humidity = reshape(hum_in, tt)

show data! ; pause
save/clobber/outtype=float/file="data/($outfile)" Outdoor_Temperature, Feels_Like, Dew_Point, Indoor_Temperature, \
 WindSpeed, WindGust, WindGustMax, WindDir, Hourly_Rain, Daily_Rain, Relative_Pressure, Outdoor_Humidity

cancel var/all
cancel data/all
use data/($outfile)

set view upper
plot/thick/color=blue outdoor_temperature,Indoor_Temperature
plot/thick/color=blue/vlim=($yaxis_min):($yaxis_max)/title="temperature: Blue Outdoor, Red Indoor" Outdoor_Temperature
plot/over/nolab/color=red/thick Indoor_Temperature

set view lower
plot Hourly_Rain, Daily_Rain

plot/thick/color=blue/vlim=($yaxis_min):($yaxis_max) Hourly_Rain
plot/over/nolab/thick/color=green/thick Daily_Rain
pause
