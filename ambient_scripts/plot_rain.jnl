\cancel mode verify

! rain_plots.jnl
! Plot Ambient Weather rainfall, coloring the data by year
can mode logo

cancel data/all
cancel symbol/all

set text/font=arial

! If we've drawn other plots, open a new plot window
IF ($win_title"0|*>1") THEN 
   set window/new/aspect=0.5/size=2
ELSE
   set window/aspect=0.5/size=2
ENDIF


DEFINE SYMBOL reference = 0
IF ($1"0|0|1|2|*>1") THEN 
   DEFINE SYMBOL reference = ($1)
   IF ($reference"0|1|*>0") THEN
      DEFINE SYMBOL reference_data = data/everett_climatology.nc
      DEFINE SYMBOL reference_title = Paine Field
      DEFINE SYMBOL reference_name = Paine
   ENDIF
   IF ($reference"0|2>1|*>0") THEN
      DEFINE SYMBOL reference_data = data/seattle_climatology.nc
      DEFINE SYMBOL reference_title = Seattle 
      DEFINE SYMBOL reference_name = Seattle 
   ENDIF

   !  Plot style for overlaying monthly reference data
   define symbol graystyle = /nolab/step=connected/line/color=(50,50,50)/dash=(0.03,0.03,0.03,0.03)

ENDIF

cancel data/all

! Open the month_rain datasets, aggregating in time
go ambient_aggregate.jnl

let tt = t[gt=hourly_rain]

let nt = `tt,return=size`

let firsty = `tax_datestring(tt[L=1], tt, "year")`
let lasty_s = tax_datestring(tt[L=`nt`], tt, "year")
let lasty = `lasty_s`


let ny = lasty - firsty + 1


IF `ny gt 7` then
   say Script needs more color definitions for `ny` years
   exit/script
endif

! Define some viewports
repeat/range=2:`ny+1`/name=yy (\
define symbol yy = `yy`;\
define view/x=0:1/y=0:1 full($yy);\
define view/x=0:1/y=0.5:1/text=1 upper($yy);\
define view/x=0:1/y=0:0.5/text=1 lower($yy);\
)

! Define colors to show each year in its own color

go write_ambient_palette

! Daily axis. Start 2 months before the start of the first year, to 
! allow for the plot of each years data overlaid, in the month-range of 
! the most recent 3 months of data.

define axis/t=1-nov-`firsty-1`:1-jan-`lasty+1`:1/edges/units=days tday


! Define daily rain totals, filling in first year

let tt = t[gt=tday]
let jul_1_20 = tt[t=1-jul-2020]
let/like=daily_rain rain1 = hourly_rain[gt=tday@sum]/12
let/like=daily_rain rain1 = daily_rain[gt=tday@max]

let/like=daily_rain day_rain1 = if rain1 then rain1 else 0
let/like=daily_rain day_rain = if tt ge `jul_1_20` then rain1 

define symbol var = daily_rain		! used in date_range.jnl
let/like=hourly_rain var = day_rain	! used in color_labels.jnl


define symbol var_title = Daily Rain

! variable to plot
let/like=day_rain var = day_rain[L=@SBX:5]

let/like=day_rain var = day_rain[L=@SBX:5]  ! *****

! Plotting a subset of the year - a few months before the current date
! To set particular dates, set date1 and date2 below call to date_range below
! date1 must be before date 2, a range within a single calendar year
! color_labels also sets the dax_lo, dax_hi, min and max of data in this date range

DEFINE SYMBOL date1 = 01-Jan
DEFINE SYMBOL date2 = 31-Dec
GO date_range
GO color_labels ($date1) ($date2)

define symbol plot_title = ($var_title), 5-day smoothed  <NL> ($color_label)
define symbol plot_title = ($var_title)<NL> ($color_label)  ! *****

! plot range for this subset of dates. Handle case of small amount of rainfall.
let ax_lo = -0.002
let ax_hi =  `INT(dax_hi + 0.5)`
if `ax_hi eq 0` THEN let ax_hi =  `INT(10*dax_hi + 1)/10`

define symbol plotstyle = ($plotstyle)/vlim=`ax_lo`:`ax_hi`

! Set the plot-style
define symbol plotstyle=($plotstyle)/thick=2
define symbol plotstyle=($plotstyle)/step=connected 


! Plot daily rain for this year, date1 through date2

cancel view
let tl = tt[L=@max]
define symbol yy = `ny`
define symbol thisyear = `tax_datestring(tl, tl, "year")`
define symbol timerange = ($date1)-($thisyear):($date2)-($thisyear)
IF ($yrm"0") THEN define symbol timerange = ($date1)-`($thisyear)-1`:($date2)-`($thisyear)`
plot($plotstyle)/color=($color($yy))/t=($timerange)/title="($timerange)"/set var
   IF ($labnum_year"0|*>1") THEN go unlabel ($lab($labnum_year))
   ppl plot

annotate/norm/x=0.5/y=1.05/siz=0.14/halign=0 "Ambient Weather Recent `($var),return=title` Data"

message Plotting data for ($timerange).  Edit plot_rain.jnl to change the date range
cancel symbol yrm

! What's the overall min/max?  Use for the v-limits 

let ax_lo =  -0.01
let ax_hi =  `INT(day_rain[t=@max]) + 1`
let dax_hi = `ax_hi`


! Define a month_rain axis starting in Jan 2020

LET start_year = `firsty`

LET indices = L[L=1:`ny*12 + 1`]
LET month = MOD(indices-1,12)+1
LET year = start_year + INT((indices-1)/12)
DEFINE AXIS/UNITS=days/T0=1-jan-1900/EDGES tmonth = DAYS1900(year,month,1)

say "Monthly Rain"
set window/new/title="Monthly Rain"/size=2/aspect=1

! Plot accumulated rain in each month
set view lower
go margins 1.4 1 1.2 1.0


let month_min = 0
let month_max = INT(month_rain[t=@max]) + 2


! What's the month_rain-sum max?  Use it for the v-limits of the month_rain accumulations

let month_rain1 =  day_rain[gt=tmonth@sum]
let/like=day_rain/title="monthly rain" month_rain = if month_rain1 then month_rain1 else 0
let month_max = `INT(month_rain[t=@max]) + 2`


IF ($reference) THEN
   use ($reference_data)
   let month_max = MAX(`month_max`, `INT(rain[t=@max]) + 0.5`)
   set data 1
ENDIF

! Color labels for the whole series
go color_labels 01-Jan 31-Dec

cancel symbol plot_title

let tt = t[gt=tday]

define symbol yy = 1
go month_rain `firsty` ($color1)

let yr = firsty + 1
repeat/range=2:`ny`/name=yy (\
define symbol yy = `yy`;\
set view lower($yy);\
go margins 1.4 1 1.2 1.0;\
go month_rain `yr` ($color($yy));\
let yr = `yr + 1`)

IF ($reference) THEN
   set view lower4
   go margins 1.4 1 1.2 1.0
   use ($reference_data)
   plot/vlim=`ax_lo`:`month_max`/noax/($graystyle) rain
   set data 1
endif

annotate/norm/x=0.5/y=1.2/halign=0/siz=0.2 "Monthly Rain Accumulation <NL> ($color_label)"

! Block out the year labels
define view/axes/x=0.45:0.55/y=0.08:0.11 block
define view/axes/x=0.45:0.55/y=0.04:0.07 block
set view block
shade/nolab/noax/pal=white/x=0:5/y=0:5/nokey x+y

! Draw a bar-chart showing month_rain
set view upper
go margins 1.4 1 1.2 1.0

let tm = t[gt=tmonth]
let color = strfloat(tax_datestring(tm, tm, "year")) - 2019

plot/step=conn/nolab/color=black/vlim=`month_min`:`month_max`/title="month_rain Rain" month_rain

define symbol levels = (0.5,`ny`.5,1)
go bar_chart3 poly/axes/over/nolab/fill/line/pal=($palette_name)/lev=($levels) month_rain color
annotate/norm/x=0.5/y=1.2/halign=0/siz=0.2 "Monthly Rainfall"

let tm = t[gt=month_rain]
let modate = TAX_DATESTRING(tm, tm, "month")

IF ($reference) THEN  ! overlay gray line for the reference data

   let/like=rain[d=2] Reference = rain[d=2, gt=tmonth]
   plot/over($graystyle) Reference
   annotate/norm/x=0/y=1.4/siz=0.12 "Gray: ($reference_title) Average Monthly Rainfall"
   
endif

! List monthly data

IF ($reference) THEN

   let/like=rain[d=2] Reference = rain[d=2, gt=tmonth]

   set data 1

   let/like=rain[d=2] ($reference_name) = rain[d=2, gt=tmonth]

! First year has partial data coverage
   define symbol timerange = `TAX_DATESTRING(tin[L=1], tin, "day")`:31-dec-`firsty`

   let/title="Yearly Accumulation"/like=month_rain rainsum = month_rain[t=($timerange)@rsum]
   let/title="($reference_name) Accumulation"/like=($reference_name) ($reference_name)sum = ($reference_name)[t=($timerange)@rsum]

   define symbol list_quals = /nohead/norow/prec=3/format=(a, f10.1, f10.1, f12.1, f10.1)

   say
   say Month      MonthRain YearAccum   Month Rain  YearAccum
   say Month      Clinton   Clinton     ($reference_name)       ($reference_name)
   say

   list($list_quals)/t=($timerange) modate, month_rain, rainsum, ($reference_name), ($reference_name)sum
   say

   define sym enddate = 31-dec-`firsty`
   define symbol year_sums = Yearly Totals: `firsty` `rainsum[t=($enddate)],p=3`

   let yr = firsty+1
   repeat/range=2:`ny`/name=yy (\
   IF `yy LT ny` THEN define symbol timerange = 1-jan-`yr`:31-dec-`yr`;\
   IF `yy EQ ny` THEN define symbol timerange = 1-jan-`yr`:`TAX_DATESTRING(tin[L=@max], tin, "day")`;\
   let rainsum = month_rain[t=($timerange)@rsum];\
   let ($reference_name)sum = ($reference_name)[t=($timerange)@rsum];\
   list($list_quals)/t=($timerange)  modate, month_rain, rainsum, ($reference_name), ($reference_name)sum;\
   define sym enddate = 31-dec-`yr`;\
   define symbol year_sums = ($year_sums),   `yr` `rainsum[t=($enddate)],p=3`;\
   say;\
   let yr = `yr + 1`)

else

   define symbol list_quals = /nohead/norow/prec=3/format=(a, f10.1, f10.1)

   say
   say Month      MonthRain YearAccum 
   say

   let rainsum = month_rain[t=`TAX_DATESTRING(tin[L=1], tin, "day")`:31-dec-`firsty`@rsum]
   list($list_quals)/t=`TAX_DATESTRING(tin[L=1], tin, "day")`:31-dec-`firsty` modate, month_rain, rainsum
   say
   

   define sym enddate = 31-dec-`firsty`
   define symbol year_sums = Clinton Yearly Totals:: `firsty` `rainsum[t=($enddate)],p=3`

   let yr = firsty+1
   repeat/range=2:`ny`/name=yy (\
   IF `yy LT ny` THEN define symbol timerange = 1-jan-`yr`:31-dec-`yr`;\
   IF `yy EQ ny` THEN define symbol timerange = 1-jan-`yr`:`TAX_DATESTRING(tin[L=@max], tin, "day")`;\
   let rainsum = month_rain[t=($timerange)@rsum];\
   list($list_quals)/t=($timerange) modate, month_rain, rainsum;\
   define sym enddate = 31-dec-`yr`;\
   define symbol year_sums = ($year_sums),  `yr` `rainsum[t=($enddate)],p=3`;\
   say;\
   let yr = `yr + 1`)



   say To see Paine Field or Seattle average month_rain rainfall with these plots:
   say GO plot_rain 1      or   GO plot_rain 2

let yr = firsty

endif

set view full
plot/noax/nolab/hlim=100:200/i=1:3 i
annotate/norm/x=0.5/y=-0.17/siz=0.12/halign=0 "($year_sums)"

