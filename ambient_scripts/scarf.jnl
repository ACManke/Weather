\cancel mode verify

! rainbow temperature scarf of one year
!
can mode logo

cancel data/all
cancel var/all
cancel symbol/all
cancel view
cancel region

set mode calendar:day

set text/font=arial
define view/axes/x=.02:1/y=0:1 nomargin

let yr = $1%2023%
define symbol start_day = $2%20-sep%
define symbol palette = $3%rnb3%


cancel view

go ambient_aggregate.jnl


let tt = t[gt=temperature]
let nt = `tt,return=size`

let enddate = tax_datestring(tt[L=`nt`], tt, "day")
let endyr = tax_datestring(tt[L=`nt`], tt, "year")
define symbol enddate = `enddate`
define symbol endyr = `endyr`


let deld = 5/(24*60)  ! delta 5 minutes, units of a day
define axis/t="1-jan-2020:00:00":"31-dec-2023:23:55":`deld`/units=days/t0="1-jan-2020:00:00"/edges time5
set var/name=temp_in temperature
let/like=temp_in temperature = temp_in[gt=time5]


let tt = t[gt=temperature]
let nt = `tt,return=size`


let firsty = `tax_datestring(tt[L=1], tt, "year")`
let lasty_s = tax_datestring(tt[L=`nt`], tt, "year")
let lasty = `lasty_s`


let ny = lasty - firsty + 1
define axis/t=1-jan-`firsty`:31-dec-`lasty`:1/edges/units=days tday

let/like=temperature temp_max = temperature[gt=tday@max]
let/like=temperature temp_min = temperature[gt=tday@min]

set region/t=1-jan-`yr`:31-dec-`yr`
set region/t=($start_day)-`yr-1`:($start_day)-`yr`
if ($start_day%|1-jan>1|01-jan>1|*>0%) then 
   set region/t=($start_day)-`yr`:31-dec-`yr`
endif


! set region/t=1-nov-`yr-1`:1-nov-`yr`

let/like=temperature/title="Daily Max Temp" day_temp_max = temp_max[t=@fav]
let/like=temperature/title="Daily Min Temp" day_temp_min = temp_min[t=@fav]

show var day_temp_max, day_temp_min

let tt = t[gt=tday]

define ax/y=1:2:1 yax ! /units=hours
let yy = y[gy=yax]

let tempmax2d = day_temp_max + 0*yy
let tempmin2d = day_temp_min + 0*yy

let temp2d_a = if yy eq 1 then tempmin2d else 0
let temp2d_b = if yy eq 2 then tempmax2d else 0

let day2d = temp2d_a + temp2d_b
define symbol levs = (-inf)(30,90,5)(inf)
! define symbol levs = (-inf)(25,95,5)(inf)
define symbol levs = (-inf)(25,90,5)(inf)

! /LEV=15H for equal numbers of readings in each bin
let do_15h = 0
IF `do_15h` THEN
   define axis/x=1:2:1 x2ax
   let xx = x[gx=x2ax]
   let x1mask = if xx eq 1 then 1 else 0
   let x2mask = if xx eq 2 then 1 else 0
   let min_and_max = day_temp_min * x1mask + day_temp_max* x2mask
   shade/lev=15H/pal=rnb2 min_and_max

   ! Use symbol ($lev_all) to define the levels
   show symbol lev_all
   define symbol levs = (12.2),(34),(37.5),(40.2),(42.1),(44.8),(46.8),(49),(51.1),(52.9),(55),(56.8),(60.1),(66.6),(74.6),(92.6)
   
   plot/step=connected {12.2,34,37.55,40.2,42.1,44.8,46.85,49,51.1,52.9,55,56.8,60.15,66.65,74.65,92.6}
   set window/new
ENDIF

! set window/siz=2
! set view upper
! go margins .8 .8
! 
! 
! shade/pal=($palette)/title="Low and High Daily Temperature"/lev=($levs)/set day2d
!  ppl ylab "`temperature,return=units`"
! ppl shade

! set view lower
! go margins .8 .8


define axis/y=0:24/npoints=144 yax !/units=hours
let yy = y[gy=yax]
let yy2d = yy + 0*ll


! Use NOAA day-length.

use data/noaa_len_2023.nc
set data 1

let daylen = noaa_len[d=2]
let tt = t[gt=daylen]

let ll  = (tt - `tt[L=1]`)  ! axis of the temperature data

let yy2d = yy + 0*ll
let daylen2d = 24 - daylen+ 0*yy

let mask1 = if yy2d lt daylen2d then 1


let aspect = (24*6/7)/(365*2/10)	! 365*2 days long (2 rows/day), 24 hours by 10 minutes wide
					! row gauge 10 row/inch, stitch gauge 7 stitch/inch

set window/siz=2/asp=`aspect` 
! set view nomargin
set view full
go margins .6 .6

shade/pal=($palette)/lev=($levs)/vlim=2:22/title="Low and High Daily Temperature"/set mask1*tempmin2d
  go unlabel ($labnum_dset)
  ppl ylab "hours"
! ppl shakey 1, 1, 0.08, , , , 0.5, 0.7, 0.8, 3.2
ppl shade

let mask2 = if yy2d ge daylen2d then 1
shade/over/nolab/pal=($palette)/lev=($levs) mask2*tempmax2d

annotate/norm/x=0.5/y=1.04/siz=0.1/halign=0 "Low and High Daily Temperature (Deg F) ($start_day)-`yr-1`:($start_day)-`yr`"


! frame/file=scarf_`yr-1`_`yr`.png

! 144 stitches, 730 rows
! 
! < 25	Deep purple		Eggplant
! 26-29	purple			French Lavendar
! 30-34	blue-purple		Majestic
! 35-39	blue			Jay
! 40-44	med blue		Blue
! 45-49	cyan			Cyan
! 50-54	green			Spruce
! 55-59	apple Ggreen		Macaw
! 60-64	chartreuse		Limeade 
! 65-69	yellow			Canary
! 70-74	gold			Turmeric
! 75-79	lt orange		Kumquat
! 80-84	red-orange		Orange
! 85-89	red			Serrano 
! > 90	deep red		Currant

! or, end with
! 90-95	dark red		Hollyberry
! > 90	deep red		Currant

! Stitches across the row are one per 10 minutes for a total of 144
let/title="# Night"/units="stitches" night_sts = INT((24-daylen)*6 + 0.5)
let/title="# Day"/units="stitches" day_sts = INT(daylen*6 + 0.5)

let/like=day_temp_min day_min = INT(day_temp_min + 0.5)
let/like=day_temp_max day_max= INT(day_temp_max + 0.5)

!! list/prec=3/t=20-sep-`yr-1`:1-jan-`yr` night_sts, day_sts, day_min, day_max



! Make a list to use for knitting.  1st Sept-Dec 2022, night length, day length
!  in stitches, then the night and day temperatures
! 

let/like=noaa_len[d=2] len = noaa_len[d=2,gt=tday]

let/title="# Day"/units="stitches" day_sts = INT(len[d=2]*6 + 0.5)
let/title="# Night"/units="stitches" night_sts = 144 - day_sts

let/like=day_temp_min day_min = INT(day_temp_min + 0.5)
let/like=day_temp_max day_max= INT(day_temp_max + 0.5)

let dates = tax_datestring(tt,tt,"day")
if `yr eq ($endyr)` then
   list/clobber/norow/file=knitting.dat/t=20-sep-`yr-1`:"($enddate):23:59" dates, night_sts, day_sts, day_min, day_max
else
   list/clobber/norow/file=knitting.dat/t=20-sep-`yr-1`:"20-sep-`yr`:23:59" dates, night_sts, day_sts, day_min, day_max
endif

say 
say Optionally run the script ambient_histogram.jnl to make histograms of the low and high day data

say
say Or in a new session, run temp_rnb_barcharts.jnl


say  ******
say         Edit knitting.dat to remove the quotes around the dates, and the .00 on the numbers.  Open the file
say         in a browser, in pring options choose 2 pages per sheet, and magnify to make the text larger, ~150%
say         For lines to be filled in as we go - save dates, night, day as csv then import into Google Sheets. 
say         See knitting_apr23 in Google Drive
say  ******


! go ambient_histogram

! set window/siz=2/asp=0.5/new

! let/like=day_temp_max/title="Daily Temperature High - Low" diff =  day_temp_max - day_temp_min
! let smooth = 5
! plot/color=blue/thick/title="Daily Temperature High - Low, and smoothed over `smooth` days" diff
! plot/over/color=red/thick/nolab diff[L=@sbx:`smooth`]
